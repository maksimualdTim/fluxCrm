services:
  backend:
    build: ./backend
    volumes:
      - ~/.m2:/root/.m2
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=fluxcrm
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - KEYCLOAK_HOST=keycloak
      - KEYCLOAK_PORT=8090
    depends_on:
      - keycloak
      - db
  keycloak:
    image: keycloak/keycloak:26.0
    ports:
      - "8090:8090"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      ENV KC_HEALTH_ENABLED: true
      ENV KC_METRICS_ENABLED: true
    command: [
      "start-dev",
      "--http-port=8090"
    ]
    depends_on:
    - keycloakdb
  frontend:
    build: ./frontend
    command: ["npm", "run", "dev"]
    ports:
      - "3000:3000"
    volumes: 
      - ./frontend:/app
      - /app/node_modules

  db:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fluxcrm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  keycloakdb:
    image: postgres:17
    ports:
      - "5433:5432" # Используйте другой порт, чтобы не конфликтовать с основной базой данных
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
      - keycloak

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  keycloak-postgres-data:
    driver: local